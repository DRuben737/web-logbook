{{ template "base" .}}

{{ define "title" }}Logbook{{ end }}

{{ define "css" }}<link rel="stylesheet" type="text/css" href="/static/css/datatables.min.css"/>{{ end }}

{{ define "content" }}
{{$api := .API}}
{{$settings := index .Data "settings"}}
<table id="logbook" class="table table-sm table-striped table-bordered nowrap table-fixed" {{if $settings.LogbookFontSize}}style="font-size:{{$settings.LogbookFontSize}}%"{{end}}>
    <thead>
        <tr class="align-top text-center">
            <th rowspan=2 class="text-center">ID</th>
            <th rowspan=2 class="text-center">Date</th>
            <th colspan=2 class="text-center">Departure</th>
            <th colspan=2 class="text-center">Arrival</th>
            <th colspan=2 class="text-center">Aircraft</th>
            <th colspan=2 class="text-center">Single Pilot<br>Time</th>
            <th rowspan=2 class="text-center">MCC</th>
            <th rowspan=2 class="text-center">Total<br>Time</th>
            <th rowspan=2 class="text-center">PIC Name</th>
            <th colspan=2 class="text-center">Landings</th>
            <th colspan=2 class="text-center">Operational<br>Condition Time</th>
            <th colspan=4 class="text-center">Pilot Function Time</th>
            <th colspan=2 class="text-center">FSTD<br>Session</th>
            <th rowspan=2 class="text-center">Remarks</th>
        </tr>
        <tr class="text-center">
            <th class="text-center">Place</th>
            <th class="text-center">Time</th>
            <th class="text-center">Place</th>
            <th class="text-center">Time</th>
            <th class="text-center">Type</th>
            <th class="text-nowrap text-center">Reg</th>
            <th class="text-center">SE</th>
            <th class="text-center">ME</th>
            <th class="text-center">Day</th>
            <th class="text-center">Night</th>
            <th class="text-center">Night</th>
            <th class="text-center">IFR</th>
            <th class="text-center">PIC</th>
            <th class="text-center">COP</th>
            <th class="text-center">Dual</th>
            <th class="text-center">Instr</th>
            <th class="text-center">Type</th>
            <th class="text-center">Time</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<a id="new-flight-record" href="{{$api.LogbookNew}}" class="btn btn-sm btn-outline-secondary" onclick=""><i class="bi bi-plus-square-fill"></i> Add New Flight Record</a>
<div class="btn-group dropend">
    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="bi bi-file-earmark-arrow-down-fill"></i> Export
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#" onclick="Export('{{$api.ExportFormatA4}}')"><i class="bi bi-file-pdf-fill"></i> PDF A4</a></li>
        <li><a class="dropdown-item" href="#" onclick="Export('{{$api.ExportFormatA5}}')"><i class="bi bi-file-pdf-fill"></i> PDF A5</a></li>
        <li><a class="dropdown-item" href="#" onclick="Export('{{$api.ExportFormatXLS}}')"><i class="bi bi-file-earmark-spreadsheet-fill"></i> XLS</a></li>
        <li><a class="dropdown-item" href="#" onclick="Export('{{$api.ExportFormatCSV}}')"><i class="bi bi-file-text-fill"></i> CSV</a></li>
    </ul>
</div>
{{ end }}

{{ define "js" }}
{{$api := .API}}

<script type="text/javascript" src="/static/js/datatables.min.js"></script>
<script>
var startDate = null
var endDate = null

// Custom filtering function for datatables
$.fn.dataTable.ext.search.push(
    function( settings, data, dataIndex ) {
        if (startDate === null || endDate === null) {
            return true;
        }

        var mdate = data[1].split("/");
        var date = new Date(`${mdate[2]}-${mdate[1]}-${mdate[0]}T00:00:00Z`);

        if (startDate <= date && date <= endDate) {
            return true;
        } else {
            return false;
        }
    }
);

$(document).ready( function () {
    var table = $('#logbook').DataTable({
        ordering: false,
        info:     false,
        ajax: '{{index .API "LogbookData"}}',
        lengthMenu: [[15, 50, -1], [15, 50, "All"]],
        columnDefs: [
            { targets: [ 0 ], visible: false, searchable: false },
            { targets: [0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22], className: "dt-body-center" },
            { targets: [1], width: "1%" }, //date
            { targets: [2,3,4,5], width: "3%" }, //places
            { targets: [8,9,10,11,15,16,17,18,19,20,22], width: "3%" }, //time
            { targets: [6,7,21], width: "4%" }, //aircraft
            { targets: [13,14], width: "3%" }, //landings
            { targets: [12], width: "9%" }, //pic
        ],
        rowCallback: function(row, data, index){
            $("td:eq(0)", row).html(`<a href="{{$api.Logbook}}/${data[0]}" class="link-primary">${data[1]}</a>`);
        },
        initComplete: function () {
            // daterange field
            $('.dataTables_filter').each(function () {
                $(this).append('<input class="form-control form-control-sm" type="text" id="daterange" name="daterange" value="Date filters...">');
            });

            // daterange logic
            $('input[name="daterange"]').daterangepicker({
                opens: 'left',
                autoUpdateInput: false,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    'This Year': [moment().startOf('year'), moment().endOf('year')],
                    'Last Year': [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')]
                },
                alwaysShowCalendars: true,
                linkedCalendars: false,
                locale: {
                    cancelLabel: 'Clear'
                }
            }, function(start, end, label) {
                startDate = start;
                endDate = end;
                table.draw();
            });

            $('input[name="daterange"]').on('apply.daterangepicker', function(ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
            });

            $('input[name="daterange"]').on('cancel.daterangepicker', function(ev, picker) {
                $(this).val('Date filters...');
                startDate = null;
                endDate = null;
                table.draw();
            });
	    }
    } );
});

function Export(format) {
    window.open("{{$api.Export}}/" + format, "_blank");
}
</script>
{{ end }}