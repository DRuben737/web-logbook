{{ template "base" .}}

{{ define "title" }}
    {{$fr := index .Data "flightRecord"}}

Flight Record {{if $fr.Date}}{{$fr.Departure.Place}} - {{$fr.Arrival.Place}}{{end}}
{{ end }}

{{ define "content" }}
    {{$fr := index .Data "flightRecord"}}

    <form action="/logbook/{{$fr.UUID}}" method="post" name="flight_record" id="flight_record"
        class="d-block" autocomplete="off" novalidate="">

        <div class="mb-3 row">
            <div class="col">
                <label for="date" class="form-label">Date</label>
                <input type="text" class="form-control" id="date" name="date" value="{{$fr.Date}}"
                    required="true" autocomplete="date" placeholder="DD/MM/YYYY">
            </div>
        </div>

        <div class="mb-3 row">
            <div class="col">
                <label for="departure_place" class="form-label">Departure Place</label>
                <input type="text" class="form-control" id="departure_place" name="departure_place" value="{{$fr.Departure.Place}}"
                    required="" autocomplete="departure_place">
            </div>

            <div class="col">
                <label for="departure_time" class="form-label">Departure Time</label>
                <input type="text" class="form-control" id="departure_time" name="departure_time" value="{{$fr.Departure.Time}}"
                    required="" autocomplete="departure_time" placeholder="HHMM">
            </div>

            <div class="col">
                <label for="arrival_place" class="form-label">Arrival Place</label>
                <input type="text" class="form-control" id="arrival_place" name="arrival_place" value="{{$fr.Arrival.Place}}"
                    required="" autocomplete="arrival_place">
            </div>

            <div class="col">
                <label for="arrival_time" class="form-label">Arrival Time</label>
                <input type="text" class="form-control" id="arrival_time" name="arrival_time" value="{{$fr.Arrival.Time}}"
                    required="" autocomplete="arrival_time" placeholder="HHMM">
            </div>
        </div>
        <div class="mb-3 row">
            <div class="col">
                <label for="aircraft_model" class="form-label">Aircraft Model</label>
                <input type="text" class="form-control" id="aircraft_model" name="aircraft_model" value="{{$fr.Aircraft.Model}}"
                    required="" autocomplete="aircraft_model">
            </div>

            <div class="col">
                <label for="aircraft_reg" class="form-label">Aircraft Registration</label>
                <input type="text" class="form-control" id="aircraft_reg" name="aircraft_reg" value="{{$fr.Aircraft.Reg}}"
                    required="" autocomplete="aircraft_reg">
            </div>
        </div>
        <div class="mb-3 row">
            <div class="col">
                <label for="pic_name" class="form-label">PIC Name</label>
                <input type="text" class="form-control" id="pic_name" name="pic_name" value="{{$fr.PIC}}"
                    required="" autocomplete="pic_name" placeholder="PIC Name">
            </div>

            <div class="col">
                <label for="landings_day" class="form-label">Day Langinds</label>
                <input type="text" class="form-control" id="landings_day" name="landings_day" value="{{formatLandings $fr.Landings.Day}}"
                    required="" autocomplete="landings_day">
            </div>

            <div class="col">
                <label for="landings_night" class="form-label">Night Landings</label>
                <input type="text" class="form-control" id="landings_night" name="landings_night" value="{{formatLandings $fr.Landings.Night}}"
                    required="" autocomplete="landings_night">
            </div>
        </div>
        <div class="mb-3 row">
            <div class="col">
                <label for="total_time" class="form-label">Total Time</label>
                <input type="text" class="form-control" id="total_time" name="total_time" value="{{$fr.Time.Total}}"
                    required="" autocomplete="total_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="se_time" class="form-label">Single Engine</label>
                <input type="text" class="form-control" id="se_time" name="se_time" value="{{$fr.Time.SE}}"
                    required="" autocomplete="se_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="me_time" class="form-label">Multi Engine</label>
                <input type="text" class="form-control" id="me_time" name="me_time" value="{{$fr.Time.ME}}"
                    required="" autocomplete="me_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="mcc_time" class="form-label">MCC Time</label>
                <input type="text" class="form-control" id="mcc_time" name="mcc_time" value="{{$fr.Time.MCC}}"
                    required="" autocomplete="mcc_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="night_time" class="form-label">Night Time</label>
                <input type="text" class="form-control" id="night_time" name="night_time" value="{{$fr.Time.Night}}"
                    required="" autocomplete="night_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="ifr_time" class="form-label">IFR Time</label>
                <input type="text" class="form-control" id="ifr_time" name="ifr_time" value="{{$fr.Time.IFR}}"
                    required="" autocomplete="ifr_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="pic_time" class="form-label">PIC Time</label>
                <input type="text" class="form-control" id="pic_time" name="pic_time" value="{{$fr.Time.PIC}}"
                    required="" autocomplete="pic_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="sic_time" class="form-label">CoPilot Time</label>
                <input type="text" class="form-control" id="sic_time" name="sic_time" value="{{$fr.Time.CoPilot}}"
                    required="" autocomplete="sic_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="dual_time" class="form-label">Dual Time</label>
                <input type="text" class="form-control" id="dual_time" name="dual_time" value="{{$fr.Time.Dual}}"
                    required="" autocomplete="dual_time" placeholder="HH:MM">
            </div>

            <div class="col">
                <label for="instr_time" class="form-label">Instructor Time</label>
                <input type="text" class="form-control" id="instr_time" name="instr_time" value="{{$fr.Time.Instructor}}"
                    required="" autocomplete="instr_time" placeholder="HH:MM">
            </div>
        </div>
        <div class="mb-3 row">
            <div class="col">
                <label for="sim_type" class="form-label">Simulator Type</label>
                <input type="text" class="form-control" id="sim_type" name="pic_name" value="{{$fr.SIM.Type}}"
                    required="" autocomplete="sim_type">
            </div>

            <div class="col">
                <label for="sim_time" class="form-label">Simulator Time</label>
                <input type="text" class="form-control" id="sim_time" name="sim_time" value="{{$fr.SIM.Time}}"
                    required="" autocomplete="sim_time" placeholder="HH:MM">
            </div>
        </div>
        <div class="mb-3 row">
            <div class="col">
                <label for="remarks" class="form-label">Remarks</label>
                <input type="text" class="form-control" id="remarks" name="remarks" value="{{$fr.Remarks}}"
                    required="" autocomplete="remarks">
            </div>
        </div>
        <input type="hidden" name="uuid" id="uuid" value="{{if $fr.UUID}}$fr.UUID{{end}}">
        <div class="mb-3 row">
            <div class="col">
                <div class="alert-danger text-center d-none" id="record-errors" role="alert"></div>
            </div>
        </div>
        <hr>

        <a id="save" href="javascript:void(0)" class="btn btn-primary" onclick="validate()">Save</a>
        <div class="float-end">
            <a id="delete" href="javascript:void(0)" class="btn btn-danger float-right" onclick="">Delete</a>
        </div>

    </form>

{{ end }}

{{ define "js" }}
<script>
    function validate() {
        let isValid = true;
        let errorMessage = "";

        // validate date field
        let date = document.getElementById("date");
        if (!date.value) {
            date.classList.add("is-invalid");
            isValid = false
        } else {
            date.classList.add("is-valid");
        }

        // valiudate departure and arrival time if they are not empty
        if (!validateDepArrTime(document.getElementById("departure_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Departure Time should be in HHMM format or empty\r\n";
        }
        if (!validateDepArrTime(document.getElementById("arrival_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Arrival Time should be in HHMM format or empty\r\n";
        }

        // validate time fields
        if (!validateTime(document.getElementById("total_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Total Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("se_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Single Engine Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("me_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Multi Engine Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("mcc_time"))) {
            isValid = false;
            errorMessage = errorMessage + "MCC Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("night_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Night Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("ifr_time"))) {
            isValid = false;
            errorMessage = errorMessage + "IFR Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("pic_time"))) {
            isValid = false;
            errorMessage = errorMessage + "PIC Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("sic_time"))) {
            isValid = false;
            errorMessage = errorMessage + "CoPilot Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("dual_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Dual Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("instr_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Instructor Time should be in HH:MM format or empty\r\n";
        }
        if (!validateTime(document.getElementById("sim_time"))) {
            isValid = false;
            errorMessage = errorMessage + "Simulator Time should be in HH:MM format or empty\r\n";
        }

        if (!isValid) {
            let recordErrors = document.getElementById("record-errors");

            recordErrors.classList.add("alert-danger");
            recordErrors.classList.remove("alert-success");
            recordErrors.classList.remove("d-none");
            recordErrors.innerText = errorMessage;

            return;
        }
    }

    function validateDepArrTime(field) {
        if (field.value !== "") {
            if (field.value.length !== 4) {
                field.classList.add("is-invalid")
                return false
            } else {
                field.classList.add("is-valid")
            }
        }

        return true
    }

    function validateTime(field) {
        if (field.value !== "") {
            if (!/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(field.value)) {
                field.classList.add("is-invalid")
                return false
            } else {
                field.classList.add("is-valid")
            }
        }

        return true
    }

</script>
{{ end }}